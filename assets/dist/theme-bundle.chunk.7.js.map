{"version":3,"sources":["webpack:///./assets/js/theme/auth.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/includes.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es6.regexp.match.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./assets/js/theme/common/state-country.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js","webpack:///./assets/js/theme/common/form-validation.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js"],"names":["Auth","context","_this","_PageManager","call","this","formCreateSelector","registerLoginValidation","$loginForm","_this2","loginModel","forms","loginValidator","nod","submit","add","selector","validate","cb","val","email","errorMessage","useValidEmail","password","enterPass","on","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","_this3","forgotPasswordValidator","registerNewPasswordValidation","newPasswordValidator","$","newPasswordForm","passwordSelector","password2Selector","Validators","setPasswordValidation","passwordRequirements","registerCreateAccountValidator","$createAccountForm","$last","validationModel","validation","createAccountValidator","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","cleanUpStateValidation","setEmailValidation","onReady","classifyForm","$newPasswordForm","length","PageManager","value","test","notEmpty","inputTagNames","formSelector","options","$form","$inputs","find","join","_options$formFieldCla","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","lodash_includes__WEBPACK_IMPORTED_MODULE_9___default","lodash_camelCase__WEBPACK_IMPORTED_MODULE_8___default","lodash_capitalize__WEBPACK_IMPORTED_MODULE_7___default","addClass","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","fieldId","match","getFieldId","after","validator","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","$fieldClassElement","data","Object","keys","classes","forEach","hasClass","removeClass","module","exports","toString","__webpack_require__","upperFirst","string","baseIndexOf","array","reHasUnicode","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","undefined","constructor","source","proxy","key","configurable","get","set","it","i","anObject","toLength","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","fn","String","res","done","rx","S","fullUnicode","unicode","lastIndex","A","n","matchStr","capitalize","camelCase","createCompounder","word","index","fromIndex","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","arrayReduce","deburr","words","reApos","callback","replace","iteratee","accumulator","initAccum","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","reAsciiWord","reHasUnicodeWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsModifier","rsEmoji","reUnicodeWord","__webpack_exports__","stateElement","countryName","currentTarget","utils","api","country","getByName","response","showAlertModal","state_error","$currentInput","lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default","states","newElement","attrs","lodash_transform__WEBPACK_IMPORTED_MODULE_4___default","item","ret","replacementAttributes","id","data-label","class","data-field-type","replaceWith","$newElement","prev","hide","makeStateOptional","$selectElement","$hiddenInput","append","required","show","makeStateRequired","statesArray","container","push","prefix","lodash_each__WEBPACK_IMPORTED_MODULE_2___default","stateObj","useIdForStates","html","addOptions","arrayEach","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","object","isArr","isArrLike","Ctor","buildValidation","$validateableElement","fieldValidations","formFieldSelector","attr","dateValidation","min_date","max_date","invalidMessage","formElementId","minSplit","maxSplit","minDate","Date","maxDate","triggeredBy","day","Number","month","year","chosenDate","buildDateValidation","element","$inputElement","inputName","elementSelector","label","min","max","numberVal","buildNumberRangeValidation","buildRequiredValidation","formFieldId","secondarySelector","checkbox","checked","buildRequiredCheckboxValidation","validationsToPerform","concat","baseFor","createBaseFor","fromRight","keysFunc","iterable","props"],"mappings":"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","file":"theme-bundle.chunk.7.js","sourcesContent":["import PageManager from './page-manager';\nimport stateCountry from './common/state-country';\nimport nod from './common/nod';\nimport validation from './common/form-validation';\nimport forms from './common/models/forms';\nimport { classifyForm, Validators } from './common/form-utils';\n\nexport default class Auth extends PageManager {\n    constructor(context) {\n        super(context);\n        this.formCreateSelector = 'form[data-create-account-form]';\n    }\n\n    registerLoginValidation($loginForm) {\n        const loginModel = forms;\n\n        this.loginValidator = nod({\n            submit: '.login-form input[type=\"submit\"]',\n        });\n\n        this.loginValidator.add([\n            {\n                selector: '.login-form input[name=\"login_email\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n            {\n                selector: '.login-form input[name=\"login_pass\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.password(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.enterPass,\n            },\n        ]);\n\n        $loginForm.on('submit', event => {\n            this.loginValidator.performCheck();\n\n            if (this.loginValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerForgotPasswordValidation($forgotPasswordForm) {\n        this.forgotPasswordValidator = nod({\n            submit: '.forgot-password-form input[type=\"submit\"]',\n        });\n\n        this.forgotPasswordValidator.add([\n            {\n                selector: '.forgot-password-form input[name=\"email\"]',\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n        ]);\n\n        $forgotPasswordForm.on('submit', event => {\n            this.forgotPasswordValidator.performCheck();\n\n            if (this.forgotPasswordValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerNewPasswordValidation() {\n        const newPasswordForm = '.new-password-form';\n        const newPasswordValidator = nod({\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\n        });\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\n\n        Validators.setPasswordValidation(\n            newPasswordValidator,\n            passwordSelector,\n            password2Selector,\n            this.passwordRequirements,\n        );\n    }\n\n    registerCreateAccountValidator($createAccountForm) {\n        const validationModel = validation($createAccountForm);\n        const createAccountValidator = nod({\n            submit: `${this.formCreateSelector} input[type='submit']`,\n        });\n        const $stateElement = $('[data-field-type=\"State\"]');\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\n        const $emailElement = $(emailSelector);\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\n        const $passwordElement = $(passwordSelector);\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\n        const $password2Element = $(password2Selector);\n\n        createAccountValidator.add(validationModel);\n\n        if ($stateElement) {\n            let $last;\n\n            // Requests the states for a country with AJAX\n            stateCountry($stateElement, this.context, (err, field) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                const $field = $(field);\n\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\n                    createAccountValidator.remove($stateElement);\n                }\n\n                if ($last) {\n                    createAccountValidator.remove($last);\n                }\n\n                if ($field.is('select')) {\n                    $last = field;\n                    Validators.setStateCountryValidation(createAccountValidator, field);\n                } else {\n                    Validators.cleanUpStateValidation(field);\n                }\n            });\n        }\n\n        if ($emailElement) {\n            createAccountValidator.remove(emailSelector);\n            Validators.setEmailValidation(createAccountValidator, emailSelector);\n        }\n\n        if ($passwordElement && $password2Element) {\n            createAccountValidator.remove(passwordSelector);\n            createAccountValidator.remove(password2Selector);\n            Validators.setPasswordValidation(\n                createAccountValidator,\n                passwordSelector,\n                password2Selector,\n                this.passwordRequirements,\n            );\n        }\n\n        $createAccountForm.on('submit', event => {\n            createAccountValidator.performCheck();\n\n            if (createAccountValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    /**\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\n     */\n    onReady() {\n        const $createAccountForm = classifyForm(this.formCreateSelector);\n        const $loginForm = classifyForm('.login-form');\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\n\n        // Injected via auth.html\n        this.passwordRequirements = this.context.passwordRequirements;\n\n        if ($loginForm.length) {\n            this.registerLoginValidation($loginForm);\n        }\n\n        if ($newPasswordForm.length) {\n            this.registerNewPasswordValidation();\n        }\n\n        if ($forgotPasswordForm.length) {\n            this.registerForgotPasswordValidation($forgotPasswordForm);\n        }\n\n        if ($createAccountForm.length) {\n            this.registerCreateAccountValidator($createAccountForm);\n        }\n    }\n}\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        _.each(statesArray.states, (stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/**\n * Validate that the given date for the day/month/year select inputs is within potential range\n * @param $formField\n * @param validation\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\n */\nfunction buildDateValidation($formField, validation) {\n    // No date range restriction, skip\n    if (validation.min_date && validation.max_date) {\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\n        const formElementId = $formField.attr('id');\n        const minSplit = validation.min_date.split('-');\n        const maxSplit = validation.max_date.split('-');\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\n                const year = Number(val);\n                const chosenDate = new Date(year, month, day);\n\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\n            },\n            errorMessage: invalidMessage,\n        };\n    }\n}\n\n/**\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\n * from many different inputs\n * @param $formField\n * @param validation\n */\nfunction buildRequiredCheckboxValidation($formField, validation) {\n    const formFieldId = $formField.attr('id');\n    const primarySelector = `#${formFieldId} input:first-of-type`;\n    const secondarySelector = `#${formFieldId} input`;\n\n    return {\n        selector: primarySelector,\n        triggeredBy: secondarySelector,\n        validate: (cb) => {\n            let result = false;\n\n            $(secondarySelector).each((index, checkbox) => {\n                if (checkbox.checked) {\n                    result = true;\n\n                    return false;\n                }\n            });\n\n            cb(result);\n        },\n        errorMessage: `The '${validation.label}' field cannot be blank.`,\n    };\n}\n\nfunction buildRequiredValidation(validation, selector) {\n    return {\n        selector,\n        validate(cb, val) {\n            cb(val.length > 0);\n        },\n        errorMessage: `The '${validation.label}' field cannot be blank.`,\n    };\n}\n\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\n    const min = Number(validation.min);\n    const max = Number(validation.max);\n\n    return {\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\n        validate: (cb, val) => {\n            const numberVal = Number(val);\n\n            cb(numberVal >= min && numberVal <= max);\n        },\n        errorMessage: invalidMessage,\n    };\n}\n\n\nfunction buildValidation($validateableElement) {\n    const validation = $validateableElement.data('validation');\n    const fieldValidations = [];\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\n\n    if (validation.type === 'datechooser') {\n        const dateValidation = buildDateValidation($validateableElement, validation);\n\n        if (dateValidation) {\n            fieldValidations.push(dateValidation);\n        }\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\n        fieldValidations.push(buildRequiredCheckboxValidation($validateableElement, validation));\n    } else {\n        $validateableElement.find('input, select, textarea').each((index, element) => {\n            const $inputElement = $(element);\n            const tagName = $inputElement.get(0).tagName;\n            const inputName = $inputElement.attr('name');\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\n\n            if (validation.type === 'numberonly') {\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\n            }\n            if (validation.required) {\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector));\n            }\n        });\n    }\n\n    return fieldValidations;\n}\n\n/**\n * Builds the validation model for dynamic forms\n * @param $form\n * @returns {Array}\n */\nexport default function ($form) {\n    let validationsToPerform = [];\n\n    $form.find('[data-validation]').each((index, input) => {\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input)));\n    });\n\n    return validationsToPerform;\n}\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n"],"sourceRoot":""}